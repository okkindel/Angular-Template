{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/components/index.ts","webpack:///./src/app/auth/components/login/login.component.html","webpack:///./src/app/auth/components/login/login.component.scss","webpack:///./src/app/auth/components/login/login.component.ts","webpack:///./src/app/auth/components/register/register.component.html","webpack:///./src/app/auth/components/register/register.component.scss","webpack:///./src/app/auth/components/register/register.component.ts","webpack:///./src/app/auth/containers/index.ts","webpack:///./src/app/auth/containers/login-page/login-page.component.html","webpack:///./src/app/auth/containers/login-page/login-page.component.scss","webpack:///./src/app/auth/containers/login-page/login-page.component.ts","webpack:///./src/app/auth/containers/register-page/register-page.component.html","webpack:///./src/app/auth/containers/register-page/register-page.component.scss","webpack:///./src/app/auth/containers/register-page/register-page.component.ts","webpack:///./src/app/auth/index.ts","webpack:///./src/app/auth/services/auth-guard.service.ts","webpack:///./src/app/auth/services/auth.service.ts","webpack:///./src/app/auth/services/index.ts","webpack:///./src/app/auth/services/register.service.ts","webpack:///./src/app/home/containers/home/home.component.html","webpack:///./src/app/home/containers/home/home.component.scss","webpack:///./src/app/home/containers/home/home.component.ts","webpack:///./src/app/home/containers/index.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/material/index.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/shared/containers/bad-request/bad-request.component.html","webpack:///./src/app/shared/containers/bad-request/bad-request.component.scss","webpack:///./src/app/shared/containers/bad-request/bad-request.component.ts","webpack:///./src/app/shared/containers/index.ts","webpack:///./src/app/shared/containers/info/info.component.html","webpack:///./src/app/shared/containers/info/info.component.scss","webpack:///./src/app/shared/containers/info/info.component.ts","webpack:///./src/app/shared/containers/password-reset/password-reset.component.html","webpack:///./src/app/shared/containers/password-reset/password-reset.component.scss","webpack:///./src/app/shared/containers/password-reset/password-reset.component.ts","webpack:///./src/app/shared/services/index.ts","webpack:///./src/app/shared/services/info.service.ts","webpack:///./src/app/shared/services/password.service.ts","webpack:///./src/app/shared/services/snakbar.service.ts","webpack:///./src/app/state/app/app.effects.ts","webpack:///./src/app/state/app/app.reducer.ts","webpack:///./src/app/state/auth/actions/auth.actions.ts","webpack:///./src/app/state/auth/actions/index.ts","webpack:///./src/app/state/auth/components/index.ts","webpack:///./src/app/state/auth/components/reducers/login-page.reducer.ts","webpack:///./src/app/state/auth/effects/auth.effects.ts","webpack:///./src/app/state/auth/effects/index.ts","webpack:///./src/app/state/auth/reducers/auth.reducers.ts","webpack:///./src/app/state/auth/reducers/index.ts","webpack:///./src/app/state/shared/utils.ts","webpack:///./src/app/state/state.module.ts","webpack:///./src/app/state/themes/actions/themes.actions.ts","webpack:///./src/app/state/themes/reducers/index.ts","webpack:///./src/app/themes/components/index.ts","webpack:///./src/app/themes/components/themes/themes.component.html","webpack:///./src/app/themes/components/themes/themes.component.scss","webpack:///./src/app/themes/components/themes/themes.component.ts","webpack:///./src/app/themes/directives/index.ts","webpack:///./src/app/themes/directives/themed.directive.ts","webpack:///./src/app/themes/index.ts","webpack:///./src/app/themes/models/themes.enum.ts","webpack:///./src/app/themes/services/themes.service.ts","webpack:///./src/app/themes/themes.module.ts","webpack:///./src/app/toolbar/components/index.ts","webpack:///./src/app/toolbar/components/no-user/no-user.component.html","webpack:///./src/app/toolbar/components/no-user/no-user.component.scss","webpack:///./src/app/toolbar/components/no-user/no-user.component.ts","webpack:///./src/app/toolbar/components/user-settings/user-settings.component.html","webpack:///./src/app/toolbar/components/user-settings/user-settings.component.scss","webpack:///./src/app/toolbar/components/user-settings/user-settings.component.ts","webpack:///./src/app/toolbar/containers/index.ts","webpack:///./src/app/toolbar/containers/menu/menu.component.html","webpack:///./src/app/toolbar/containers/menu/menu.component.scss","webpack:///./src/app/toolbar/containers/menu/menu.component.ts","webpack:///./src/app/toolbar/containers/toolbar/toolbar.component.html","webpack:///./src/app/toolbar/containers/toolbar/toolbar.component.scss","webpack:///./src/app/toolbar/containers/toolbar/toolbar.component.ts","webpack:///./src/app/toolbar/toolbar.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeModule, HomeComponent } from './home';\nimport { AuthGuard } from './auth';\nimport { RegisterPageComponent, LoginPageComponent } from './auth/containers';\nimport { InfoComponent, BadRequestComponent, PasswordResetComponent } from './shared/containers';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'login',\n    component: LoginPageComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterPageComponent,\n  },\n  {\n    path: 'info',\n    component: InfoComponent,\n  },\n  {\n    path: 'reset-pass',\n    component: PasswordResetComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '404',\n    component: BadRequestComponent\n  },\n  {\n    path: '**',\n    redirectTo: '/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(\n    routes, {\n      useHash: true,\n      enableTracing: false,\n    }),\n    HomeModule,\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-toolbar></app-toolbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \":host {\\n  display: block;\\n  overflow: hidden;\\n  height: 100vh; }\\n\"","import { Component, OnInit, HostBinding } from '@angular/core';\nimport * as fromThemes from './state/themes/reducers';\nimport { Store, select } from '@ngrx/store';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { Themes } from './themes/models/themes.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  @HostBinding('class') componentCssClass;\n\n  constructor(\n    private store: Store<fromThemes.IState>,\n    public overlayContainer: OverlayContainer) { }\n\n  ngOnInit(): void {\n    const state = (this.store.pipe(select(fromThemes.getTheme)));\n    state.subscribe(data => this.changeColors(data));\n  }\n\n  changeColors(theme) {\n    Object.keys(Themes).forEach(item => {\n      this.overlayContainer.getContainerElement().classList.remove(Themes[item]);\n    });\n    this.overlayContainer.getContainerElement().classList.add(theme);\n    this.componentCssClass = theme;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { StateModule } from './state/state.module';\nimport { MaterialModule } from './material';\nimport { NgModule } from '@angular/core';\nimport { AuthModule } from './auth';\nimport { AppComponent } from './app.component';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { ThemesModule } from './themes';\nimport { FormsModule } from '@angular/forms';\nimport { BadRequestComponent, InfoComponent, PasswordResetComponent } from './shared/containers';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InfoComponent,\n    BadRequestComponent,\n    PasswordResetComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    AppRoutingModule,\n    AuthModule,\n    StateModule,\n    ToolbarModule,\n    ThemesModule,\n    FormsModule,\n  ],\n  bootstrap: [AppComponent],\n  exports: [\n    InfoComponent,\n    BadRequestComponent\n  ]\n})\nexport class AppModule { }\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginPageComponent, RegisterPageComponent } from './containers/';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthEffects } from '../state/auth/effects/';\nimport { reducers } from '../state/auth/reducers';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent, RegisterComponent } from './components';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material';\nimport { StoreModule } from '@ngrx/store';\nimport { NgModule } from '@angular/core';\nimport { ThemesModule } from '../themes';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ThemesModule,\n    EffectsModule.forFeature([AuthEffects]),\n    StoreModule.forFeature('auth', reducers),\n    RouterModule.forChild([{ path: 'login', component: LoginPageComponent }]),\n  ],\n  declarations: [\n    LoginComponent,\n    LoginPageComponent,\n    RegisterPageComponent,\n    RegisterComponent\n  ]\n})\nexport class AuthModule { }\n","export * from './login/login.component';\nexport * from './register/register.component';","module.exports = \"<form id=\\\"login-form\\\" (ngSubmit)=\\\"login.emit(credentials)\\\" ngNativeValidate>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input \\n    matInput\\n    autofocus \\n    required \\n    placeholder=\\\"Email\\\" \\n    [(ngModel)]=\\\"credentials.email\\\" \\n    name=\\\"email\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input \\n    matInput\\n    required \\n    [type]=\\\"hide ? 'text' : 'password'\\\"\\n    placeholder=\\\"Password\\\" \\n    [(ngModel)]=\\\"credentials.password\\\" \\n    name=\\\"password\\\">\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n  </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"big\\\" type=\\\"submit\\\" [disabled]=\\\"disabled\\\">\\n    Login\\n    <mat-progress-bar *ngIf=\\\"disabled\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n  </button>\\n  <button [routerLink]=\\\"['/reset-pass']\\\"  mat-raised-button color=\\\"primary\\\" class=\\\"small\\\" routerLinkActive=\\\"active\\\" >Reset Password</button>\\n</form>\\n\"","module.exports = \".big {\\n  margin-top: 5px;\\n  width: 70%; }\\n\\n.small {\\n  margin-top: 5px;\\n  width: 25%;\\n  margin-left: 5%; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ICredentials } from '../../models';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  @Input() disabled = false;\n  @Output() login: EventEmitter<ICredentials> = new EventEmitter();\n  @Output() reset_pass = new EventEmitter();\n\n  public credentials: ICredentials = {\n    email: '',\n    password: '',\n  };\n}\n","module.exports = \"<form id=\\\"register-form\\\" (ngSubmit)=\\\"validate() && register.emit(credentials)\\\" ngNativeValidate>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input \\n    matInput\\n    placeholder=\\\"Email\\\" \\n    [(ngModel)]=\\\"credentials.email\\\"\\n    [email]=\\\"true\\\"\\n    type=\\\"email\\\"\\n    name=\\\"email\\\"\\n    required>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input \\n    matInput\\n    placeholder=\\\"Password\\\" \\n    [(ngModel)]=\\\"credentials.password\\\" \\n    [type]=\\\"hide ? 'text' : 'password'\\\"\\n    name=\\\"password\\\"\\n    minlength=\\\"5\\\"\\n    required>\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input \\n    matInput\\n    placeholder=\\\"Confirm Password\\\" \\n    [(ngModel)]=\\\"re_password\\\" \\n    [type]=\\\"hide ? 'text' : 'password'\\\"\\n    name=\\\"re-password\\\"\\n    minlength=\\\"5\\\"\\n    required>\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n  </mat-form-field>\\n  \\n  <div align=\\\"center\\\" *ngIf=\\\"!validate_password()\\\"> <small> Passwords do not match.</small> <br><br> </div>\\n\\n  <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!validate() || disabled\\\">\\n    Register\\n    <mat-progress-bar *ngIf=\\\"disabled\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n  </button>\\n</form>\"","module.exports = \"button {\\n  margin-top: 5px;\\n  margin-left: 15%;\\n  width: 70%; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { ICredentials } from '../../models';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  re_password: String = '';\n\n  @Input() disabled = false;\n  @Output() register: EventEmitter<ICredentials> = new EventEmitter();\n\n  public credentials: ICredentials = {\n    email: '',\n    password: '',\n  };\n\n  validate_password = () => this.re_password === this.credentials.password;\n\n  validate = () => this.validate_password()\n    && this.credentials.email !== ''\n    && this.credentials.password !== ''\n\n}\n","export * from './login-page/login-page.component';\nexport * from './register-page/register-page.component';\n","module.exports = \"<div class=\\\"container\\\" appAddTheme>\\n\\n  <mat-card class=\\\"form\\\">\\n    <app-login \\n      (login)=\\\"login($event)\\\" \\n      [disabled]=\\\"isPending$ | async\\\">\\n    </app-login>\\n  </mat-card>\\n\\n</div>\"","module.exports = \".container {\\n  height: 100%;\\n  width: 100%; }\\n\\n.form {\\n  margin-left: calc(35% - 30px);\\n  top: 25%;\\n  width: 30%;\\n  padding: 30px; }\\n\"","import * as AuthActions from '../../../state/auth/actions/';\nimport { SnackbarService, PasswordService } from '../../../shared/services';\nimport * as fromAuth from '../../../state/auth/reducers/';\nimport { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { ICredentials } from '../../models';\nimport { isNil, not, compose } from 'ramda';\nimport { filter } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent {\n\n  errorMessage$: Observable<any>;\n  isPending$: Observable<boolean>;\n\n  constructor(\n    private store: Store<fromAuth.IState>,\n    private snackBar: SnackbarService) {\n    this.errorMessage$ = store.pipe(\n      select(fromAuth.getError),\n      filter(compose(not, isNil))\n    );\n    this.isPending$ = store.pipe(select(fromAuth.getIsPending));\n  }\n\n  login(credentials: ICredentials) {\n    this.store.dispatch(new AuthActions.Login(credentials));\n\n    this.errorMessage$.subscribe(\n      response => this.snackBar.showMessage(response.error.status || 'No server connection.')\n    );\n  }\n}\n","module.exports = \"<div class=\\\"container\\\" appAddTheme>\\n\\n  <mat-card class=\\\"form\\\">\\n    <app-register \\n      (register)=\\\"register($event)\\\"\\n      [disabled]=\\\"isPending$ | async\\\">\\n    </app-register>\\n  </mat-card>\\n\\n</div>\"","module.exports = \".container {\\n  height: 100%;\\n  width: 100%; }\\n\\n.form {\\n  margin-left: calc(35% - 30px);\\n  top: 25%;\\n  width: 30%;\\n  padding: 30px; }\\n\"","import { Component } from '@angular/core';\nimport { ICredentials } from '../../models';\nimport { RegisterService } from '../../services';\nimport { SnackbarService } from '../../../shared/services';\nimport { InfoService } from 'src/app/shared/services/';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss']\n})\nexport class RegisterPageComponent {\n\n  isPending$: Observable<boolean>;\n\n  constructor(\n    private service: RegisterService,\n    private snackBar: SnackbarService,\n    private infoSevice: InfoService) { }\n\n  register(credentials: ICredentials) {\n    this.isPending$ = of(true);\n    this.service.register(credentials.email, credentials.password)\n      .subscribe(\n        response => {\n          this.infoSevice.showInfo('You were successfully registered.');\n        },\n        error => {\n          this.snackBar.showMessage(error.error.status || 'No server connection');\n          this.isPending$ = of(false);\n        });\n  }\n}\n","export * from './auth.module';\nexport { AuthGuard } from './services/auth-guard.service';\n","import * as AuthActions from '../../state/auth/actions/';\nimport * as fromAuth from '../../state/auth/reducers/';\nimport { CanActivate } from '@angular/router';\nimport { map, first } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private store: Store<fromAuth.IState>) { }\n\n  canActivate(): Observable<boolean> {\n    return this.store.pipe(\n      select(fromAuth.getIsLoggedIn),\n      map(this.handleLoginStatus),\n      first()\n    );\n  }\n\n  private handleLoginStatus = (isLoggedIn: boolean): boolean => {\n    if (isLoggedIn) {\n      return true;\n    }\n    setTimeout(() => {\n      this.store.dispatch(new AuthActions.LoginRedirect());\n    }, 0);\n    return false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IUser } from '../models';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private BASE_URL = environment.api_url;\n\n  constructor(private http: HttpClient) { }\n\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const url = `${this.BASE_URL}/api/users`;\n    const body = { 'username': email, 'password': password };\n    return this.http.post<IUser>(url, body);\n  }\n}\n","export * from './auth-guard.service';\nexport * from './register.service';\nexport * from './auth.service';\n","import { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ICredentials } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  private BASE_URL = environment.api_url;\n\n  constructor(private http: HttpClient) { }\n\n\n  register(email: string, password: string): Observable<any> {\n    const url = `${this.BASE_URL}/register`;\n    const body = { 'email': email, 'password': password };\n    return this.http.post<ICredentials>(url, body);\n  }\n}\n","module.exports = \"<div class=\\\"container\\\" appAddTheme>\\n    <mat-card class=\\\"card\\\">\\n        <div align=\\\"center\\\">\\n            <img src='../../../../assets/icons/icon_white.svg' />\\n            <br><br>\\n            <h1>\\n                <p>\\n                    Welcome to Hackathon!\\n                </p>\\n            </h1>\\n        </div>\\n    </mat-card>\\n    <mat-card class=\\\"card\\\">\\n        <div align=\\\"center\\\">\\n            <p>\\n                Begin with <a routerLink=\\\"#\\\" routerLinkActive=\\\"active\\\">something</a> or <a routerLink=\\\"#\\\"\\n                    routerLinkActive=\\\"active\\\">something other</a> now!\\n            </p>\\n        </div>\\n    </mat-card>\\n</div>\"","module.exports = \".container {\\n  height: 100%;\\n  width: 100%;\\n  overflow: auto; }\\n\\n.card {\\n  top: 15%;\\n  padding: 30px 20%;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  border-radius: 0;\\n  color: white;\\n  margin-bottom: 1em; }\\n\\nimg {\\n  height: 15em; }\\n\\nbutton {\\n  position: absolute;\\n  bottom: 2em;\\n  right: 2em;\\n  padding: 1em;\\n  border-radius: 60px; }\\n\"","import { Component } from '@angular/core';\nimport { AppState } from '../../../state/app/app.interface';\nimport { Store, select } from '@ngrx/store';\nimport * as fromAuth from '../../../state/auth/reducers/';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  email$: Observable<string>;\n\n  constructor(\n    private store: Store<AppState>) {\n    this.email$ = this.store.pipe(select(fromAuth.getEmail));\n  }\n}\n","export * from './home/home.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HomeComponent } from './containers';\nimport { ThemesModule } from '../themes';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    MaterialModule,\n    ThemesModule\n  ],\n  declarations: [\n    HomeComponent,\n  ]\n})\nexport class HomeModule { }\n","export * from './containers';\nexport * from './home.module';\n","export * from './material.module';\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatListModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatProgressSpinnerModule,\n  MatButtonToggleModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatMenuModule,\n  MatExpansionModule,\n  MatStepperModule,\n  MatTooltipModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatExpansionModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatButtonToggleModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n  exports: [\n    MatExpansionModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatButtonToggleModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n})\nexport class MaterialModule { }\n","module.exports = \"<div class=\\\"container\\\" appAddTheme>\\n\\n  <mat-card class=\\\"info\\\" align=\\\"center\\\">\\n    <div *ngIf=\\\"theme=='light-theme'\\\">\\n      <img src='../../../../assets/icons/icon_black.svg' />\\n    </div>\\n    <div *ngIf=\\\"theme=='dark-theme'\\\">\\n      <img src='../../../../assets/icons/icon_white.svg' />\\n    </div>\\n    <br>\\n    <h2>\\n      Error 404\\n    </h2>\\n    <p>\\n      Route not found.\\n    </p>\\n  </mat-card>\\n\\n</div>\"","module.exports = \".container {\\n  height: 100%;\\n  width: 100%; }\\n\\n.info {\\n  margin-left: calc(35% - 30px);\\n  top: 25%;\\n  width: 30%;\\n  padding: 30px; }\\n\\nimg {\\n  height: 10em; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromThemes from '../../../state/themes/reducers';\n\n@Component({\n  selector: 'app-bad-request',\n  templateUrl: './bad-request.component.html',\n  styleUrls: ['./bad-request.component.scss']\n})\nexport class BadRequestComponent implements OnInit {\n\n  theme: String;\n\n  constructor(private store: Store<fromThemes.IState>) { }\n\n  ngOnInit() {\n    this.store.pipe(select(fromThemes.getTheme)).subscribe(res => this.theme = res);\n  }\n\n}\n","export * from './bad-request/bad-request.component';\nexport * from './info/info.component';\nexport * from './password-reset/password-reset.component';\n","module.exports = \"<div class=\\\"container\\\" appAddTheme>\\n\\n  <mat-card class=\\\"info\\\" align=\\\"center\\\">\\n\\n    <div *ngIf=\\\"theme=='light-theme'\\\">\\n      <img src='../../../../assets/icons/icon_black.svg' />\\n    </div>\\n    <div *ngIf=\\\"theme=='dark-theme'\\\">\\n      <img src='../../../../assets/icons/icon_white.svg' />\\n    </div>\\n    <br>\\n    <h2>\\n      {{ message }}\\n    </h2>\\n    <br>\\n\\n    <p>\\n      You will be redirected in a while.\\n    </p>\\n\\n    <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Redirect back.</a>\\n  </mat-card>\\n\\n</div>\"","module.exports = \".container {\\n  height: 100%;\\n  width: 100%; }\\n\\nimg {\\n  height: 10em; }\\n\\n.info {\\n  margin-left: calc(35% - 30px);\\n  top: 25%;\\n  width: 30%;\\n  padding: 30px; }\\n\"","import { Component, AfterViewInit, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { InfoService } from '../../services/info.service';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\nimport * as fromThemes from '../../../state/themes/reducers';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements AfterViewInit, OnInit {\n\n  message: String;\n  theme: String;\n\n  constructor(\n    private router: Router,\n    private service: InfoService,\n    private store: Store<fromThemes.IState>) { }\n\n  ngOnInit(): void {\n    this.message = this.service.message;\n    this.store.pipe(select(fromThemes.getTheme)).subscribe(res => this.theme = res);\n  }\n\n  observe(): Observable<any> {\n    return Observable.create(observer => {\n      observer.next(true);\n    });\n  }\n\n  redirect() {\n    this.observe().pipe(delay(3000)).subscribe(() => {\n      if (this.router.url === '/info') {\n        this.router.navigate(['home']);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.redirect();\n  }\n}\n","module.exports = \"<div class=\\\"container\\\" appAddTheme>\\n\\n  <mat-card class=\\\"info\\\" align=\\\"center\\\">\\n\\n    <div *ngIf=\\\"theme=='light-theme'\\\">\\n      <img src='../../../../assets/icons/icon_black.svg' />\\n    </div>\\n    <div *ngIf=\\\"theme=='dark-theme'\\\">\\n      <img src='../../../../assets/icons/icon_white.svg' />\\n    </div>\\n    <br>\\n    <mat-form-field style=\\\"width: 80%\\\">\\n      <input [(ngModel)]=\\\"email\\\" matInput placeholder=\\\"Your email.\\\">\\n    </mat-form-field>\\n    <br>\\n    <mat-form-field style=\\\"width: 80%\\\">\\n      <input matInput [(ngModel)]=\\\"pass\\\" placeholder=\\\"Your new password.\\\">\\n    </mat-form-field>\\n    <br>\\n    <div align=\\\"center\\\" *ngIf=\\\"!validate()\\\"> <small> One of inputs is empty.</small> <br><br> </div>\\n    <button mat-button (click)=\\\"submit()\\\" color=\\\"primary\\\" [disabled]=\\\"!validate() || disabled\\\">Submit\\n      <mat-progress-bar *ngIf=\\\"disabled\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    </button>\\n  </mat-card>\\n\\n</div>\"","module.exports = \".container {\\n  height: 100%;\\n  width: 100%; }\\n\\nimg {\\n  height: 10em; }\\n\\n.info {\\n  margin-left: calc(35% - 30px);\\n  top: 25%;\\n  width: 30%;\\n  padding: 30px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromThemes from '../../../state/themes/reducers';\nimport { PasswordService, InfoService, SnackbarService } from '../../services';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.scss']\n})\nexport class PasswordResetComponent implements OnInit {\n\n  disabled = false;\n  message: String;\n  theme: String;\n\n  email = '';\n  pass = '';\n\n  constructor(\n    private service: PasswordService,\n    private infoSevice: InfoService,\n    private store: Store<fromThemes.IState>,\n    private snackBar: SnackbarService) { }\n\n  ngOnInit(): void {\n    this.message = this.service.message;\n    this.store.pipe(select(fromThemes.getTheme)).subscribe(res => this.theme = res);\n  }\n\n  validate = () => this.email !== '' && this.pass !== '';\n\n  submit() {\n    this.disabled = true;\n    this.service.resetPassword(this.email, this.pass)\n      .subscribe(\n        response => {\n          this.infoSevice.showInfo('Your password is changed.');\n        },\n        error => {\n          this.disabled = false;\n          this.snackBar.showMessage(error.error.status || 'No server connection');\n        });\n  }\n}\n","export * from './snakbar.service';\nexport * from './info.service';\nexport * from './password.service';\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoService {\n\n  constructor(private router: Router) { }\n\n  message: String = '';\n\n  showInfo(msg: String) {\n    this.message = msg;\n    this.router.navigate(['info']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n\n  message: String = '';\n  private BASE_URL = environment.api_url;\n\n  constructor(private http: HttpClient) { }\n\n  resetPassword(email: string, password: string) {\n    const url = `${this.BASE_URL}/reset`;\n    const body = { 'email': email, 'password': password };\n    return this.http.post(url, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  showMessage(message) {\n    this.snackBar.open(message, null, { duration: 4000 });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class AppEffects {\n  constructor(private actions: Actions) { }\n}\n","import * as fromRouter from '@ngrx/router-store';\nimport { IRouterStateUrl } from '../shared/utils';\nimport { ActionReducerMap } from '@ngrx/store';\n\nexport interface IState {\n  router: fromRouter.RouterReducerState<IRouterStateUrl>;\n}\n\nexport const reducers: ActionReducerMap<IState> = {\n  router: fromRouter.routerReducer,\n};\n","import { Action } from '@ngrx/store';\nimport { ICredentials, IUser } from '../../../auth/models';\n\nexport enum AuthActionTypes {\n  Login = '[Auth] Login',\n  Logout = '[Auth] Logout',\n  LoginSuccess = '[Auth] Login Success',\n  LoginFailure = '[Auth] Login Failure',\n  LoginRedirect = '[Auth] Login Redirect',\n}\n\nexport class Login implements Action {\n  readonly type = AuthActionTypes.Login;\n\n  constructor(public payload: ICredentials) {}\n}\n\nexport class LoginSuccess implements Action {\n  readonly type = AuthActionTypes.LoginSuccess;\n\n  constructor(public payload: IUser) {}\n}\n\nexport class LoginFailure implements Action {\n  readonly type = AuthActionTypes.LoginFailure;\n\n  constructor(public payload: any) {}\n}\n\nexport class LoginRedirect implements Action {\n  readonly type = AuthActionTypes.LoginRedirect;\n}\n\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\nexport type AuthActionsUnion =\n  | Login\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | Logout;\n","export * from './auth.actions';\n","export * from './reducers/login-page.reducer';\n","import { AuthActionsUnion, AuthActionTypes } from '../../actions/';\n\nexport interface IState {\n  error: string;\n  isPending: boolean;\n}\n\nexport const initialState: IState = {\n  error: undefined,\n  isPending: false\n};\n\nexport function reducer(state = initialState, action: AuthActionsUnion): IState {\n  switch (action.type) {\n    case AuthActionTypes.Login: {\n      return {\n        ...state,\n        error: undefined,\n        isPending: true\n      };\n    }\n\n    case AuthActionTypes.LoginSuccess: {\n      return {\n        ...state,\n        error: undefined,\n        isPending: false\n      };\n    }\n\n    case AuthActionTypes.LoginFailure: {\n      return {\n        ...state,\n        error: action.payload,\n        isPending: false\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getError = (state: IState) => state.error;\nexport const getIsPending = (state: IState) => state.isPending;\n","import { Login, AuthActionTypes, LoginSuccess, LoginFailure } from '../actions/auth.actions';\nimport { AuthService } from '../../../auth/services/auth.service';\nimport { map, exhaustMap, catchError, tap } from 'rxjs/operators';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { InfoService } from 'src/app/shared/services';\nimport { IUser } from '../../../auth/models';\nimport { Injectable } from '@angular/core';\nimport { of as observableOf } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthEffects {\n\n  @Effect()\n  login$ = this.actions$.pipe(\n    ofType<Login>(AuthActionTypes.Login),\n    map((action) => action.payload),\n    exhaustMap((credentials: IUser) =>\n      this.authService\n        .login(credentials.email, credentials.password)\n        .pipe(\n          map(auth => auth ? new LoginSuccess({ email: credentials.email, token: auth.token }) : new LoginFailure(false)),\n          catchError(error => observableOf(new LoginFailure(error)))\n        )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  loginSuccess$ = this.actions$.pipe(\n    ofType(AuthActionTypes.LoginSuccess),\n    tap((action: any) => {\n      localStorage.setItem('token', action.payload.token);\n      this.router.navigate(['home']);\n      this.infoService.showInfo('You were successfully logged in.');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  loginRedirect$ = this.actions$.pipe(\n    ofType(AuthActionTypes.LoginRedirect),\n    tap(_ => this.router.navigate(['login'])),\n  );\n\n  @Effect({ dispatch: false })\n  logout$ = this.actions$.pipe(\n    ofType(AuthActionTypes.Logout),\n    tap(_ => this.router.navigate(['home'])),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private router: Router,\n    private infoService: InfoService\n    ) { }\n}\n","export * from './auth.effects';\n","import { AuthActionsUnion, AuthActionTypes } from '../actions/auth.actions';\n\nexport interface IState {\n  isLoggedIn: boolean;\n  email: string;\n  token: string;\n}\n\nexport const initialState: IState = {\n  isLoggedIn: false,\n  email: undefined,\n  token: undefined\n};\n\nexport function reducer(state = initialState, action: AuthActionsUnion): IState {\n  switch (action.type) {\n    case AuthActionTypes.LoginSuccess: {\n      return {\n        ...state,\n        isLoggedIn: true,\n        email: action.payload.email,\n        token: action.payload.token\n      };\n    }\n\n    case AuthActionTypes.Logout: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getIsLoggedIn = (state: IState) => state.isLoggedIn;\nexport const getEmail = (state: IState) => state.email;\n","import * as fromAuth from './auth.reducers';\nimport * as fromRoot from '../../app/app.reducer';\nimport * as fromLoginPage from '../components/';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nexport interface AuthState {\n  status: fromAuth.IState;\n  loginPage: fromLoginPage.IState;\n}\n\nexport interface IState extends fromRoot.IState {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap<AuthState> = {\n  status: fromAuth.reducer,\n  loginPage: fromLoginPage.reducer\n};\n\nexport const selectAuthState = createFeatureSelector<AuthState>('auth');\n\nexport const selectAuthStatusState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.status,\n);\n\nexport const getIsLoggedIn = createSelector(\n  selectAuthStatusState,\n  fromAuth.getIsLoggedIn\n);\n\nexport const getEmail = createSelector(\n  selectAuthStatusState,\n  fromAuth.getEmail\n);\n\nexport const selectLoginPageState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.loginPage\n);\n\nexport const getError = createSelector(\n  selectLoginPageState,\n  fromLoginPage.getError\n);\n\nexport const getIsPending = createSelector(\n  selectLoginPageState,\n  fromLoginPage.getIsPending\n);\n","import { Params, RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\n\nconst typeCache: { [label: string]: boolean } = {};\n\nexport function createActionType<T>(label: T | ''): T {\n  if (typeCache[<string>label]) {\n    throw new Error(`Action type \"${label}\" is not unique\"`);\n  }\n\n  typeCache[<string>label] = true;\n\n  return <T>label;\n}\n\nexport interface IRouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomSerializer implements RouterStateSerializer<IRouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): IRouterStateUrl {\n    let route = routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url } = routerState;\n    const queryParams = routerState.root.queryParams;\n    const params = route.params;\n\n    // Only return an object including the URL, params and query params\n    // instead of the entire snapshot\n    return { url, params, queryParams };\n  }\n}\n\n// FOR STORE ROUTING\n","import { RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { CustomSerializer } from './shared/utils';\nimport { CommonModule } from '@angular/common';\nimport { AppEffects } from './app/app.effects';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './app/app.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([]),\n    EffectsModule.forRoot([\n      AppEffects\n    ]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  providers: [\n    {\n      provide: RouterStateSerializer,\n      useClass: CustomSerializer\n    },\n  ],\n  declarations: []\n})\nexport class StateModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: StateModule) {\n    if (parentModule) {\n      throw new Error(\n        'StateModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule,\n      providers: []\n    };\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport enum ThemesActions {\n    ChangeTheme = '[Themes] Change Theme'\n}\n\nexport type ThemesActionsUnion\n    = ChangeTheme;\n\nexport class ChangeTheme implements Action {\n    readonly type = ThemesActions.ChangeTheme;\n\n    constructor(public payload?: any) { }\n}\n","\nimport { Themes } from '../../../themes/models/themes.enum';\nimport { ThemesActionsUnion, ThemesActions } from '../actions/themes.actions';\nimport {\n    createFeatureSelector,\n    createSelector\n} from '@ngrx/store';\n\nexport interface IState {\n    currentTheme: string;\n}\n\nexport const initialState: IState = {\n    currentTheme: localStorage.theme || Themes.Dark\n};\n\nexport function reducer(state = initialState, action: ThemesActionsUnion): IState {\n    switch (action.type) {\n        case ThemesActions.ChangeTheme: {\n            return {\n                ...state,\n                currentTheme: action.payload\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getThemesState = createFeatureSelector<IState>('themes');\n\nexport const getTheme = createSelector(\n    getThemesState,\n    (state: IState) => state.currentTheme\n);\n","export * from './themes/themes.component';\n","module.exports = \"<button mat-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"toolbar__btn\\\">\\n  <mat-icon>format_color_fill</mat-icon>\\n</button>\\n<mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n    <button \\n      mat-menu-item \\n      *ngFor=\\\"let theme of themes()\\\" \\n      (click)=\\\"changeTheme(theme)\\\">\\n      {{theme}}\\n    </button>\\n</mat-menu>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ThemesService } from '../../services/themes.service';\nimport { Themes } from '../../models/themes.enum';\n\n@Component({\n  selector: 'app-theme-picker',\n  templateUrl: './themes.component.html',\n  styleUrls: ['./themes.component.scss']\n})\nexport class ThemesComponent {\n\n  constructor(private themesService: ThemesService) { }\n\n  themes = (): Array<string> => (Object.keys(Themes));\n\n  changeTheme(theme) {\n    this.themesService.changeTheme(Themes[theme]);\n  }\n}\n","export * from './themed.directive';\n","import { Directive, Renderer, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAddTheme]'\n})\n\nexport class ThemedDirective {\n  constructor(renderer: Renderer, el: ElementRef) {\n    renderer.setElementClass(el.nativeElement, 'mat-app-background', true);\n  }\n}\n","export * from './themes.module';\n","export enum Themes {\n    Light = 'light-theme',\n    Dark = 'dark-theme',\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport * as fromRoot from '../../state/app/app.reducer';\nimport * as fromThemes from '../../state/themes/reducers';\nimport * as ThemesActions from '../../state/themes/actions/themes.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemesService {\n  themeChoosen$: Observable<string>;\n\n  constructor(private store: Store<fromRoot.IState>) {\n    this.themeChoosen$ = this.store.pipe(select(fromThemes.getTheme));\n  }\n\n  public changeTheme(theme) {\n    this.store.dispatch(new ThemesActions.ChangeTheme(theme));\n    localStorage.theme = theme;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from '../state/themes/reducers';\nimport {\n  MatIconModule,\n  MatButtonModule,\n  MatMenuModule,\n  MatTooltipModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { ThemedDirective } from './directives';\nimport { ThemesComponent } from './components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('themes', reducer),\n    MatIconModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  declarations: [ThemesComponent, ThemedDirective],\n  exports: [ThemesComponent, ThemedDirective]\n})\nexport class ThemesModule { }\n","export * from './user-settings/user-settings.component';\nexport * from './no-user/no-user.component';\n","module.exports = \"<span>\\n  <button mat-button (click)=\\\"login.emit()\\\" class=\\\"toolbar__btn shadow_010\\\">\\n    <mat-icon>account_box</mat-icon>\\n    Login\\n  </button>\\n  <button mat-button (click)=\\\"register.emit()\\\" class=\\\"toolbar__btn shadow_005\\\">\\n    <mat-icon>edit</mat-icon>\\n    Register\\n  </button>\\n</span>\"","module.exports = \"mat-icon {\\n  margin-right: 5px; }\\n\\n.shadow_010 {\\n  background-color: rgba(0, 0, 0, 0.15); }\\n\\n.shadow_005 {\\n  background-color: rgba(0, 0, 0, 0.15); }\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-no-user',\n  templateUrl: './no-user.component.html',\n  styleUrls: ['./no-user.component.scss']\n})\nexport class NoUserComponent {\n\n  constructor() { }\n\n  @Output() login = new EventEmitter;\n  @Output() register = new EventEmitter;\n\n}\n","module.exports = \"<button \\n  class=\\\"toolbar__btn shadow\\\"\\n  mat-button \\n  [matMenuTriggerFor]=\\\"menu\\\">\\n  <mat-icon class=\\\"\\\">account_circle</mat-icon>\\n  {{email}}\\n</button>\\n\\n<mat-menu \\n  #menu=\\\"matMenu\\\" \\n  [overlapTrigger]=\\\"false\\\">\\n  <button \\n    mat-menu-item \\n    (click)=\\\"logout.emit()\\\">\\n    <mat-icon>logout</mat-icon>\\n    Logout\\n  </button>\\n</mat-menu>\"","module.exports = \".shadow {\\n  background-color: rgba(0, 0, 0, 0.15); }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.scss']\n})\nexport class UserSettingsComponent {\n\n  @Input() email: string;\n  @Output() logout = new EventEmitter;\n\n  constructor() { }\n}\n","export * from './toolbar/toolbar.component';\nexport * from './menu/menu.component';\n","module.exports = \"<app-user-settings \\n*ngIf=\\\"email$ | async\\\"\\n[email]=\\\"email$ | async\\\" \\n(logout)=\\\"logout()\\\">\\n</app-user-settings>\\n\\n<app-no-user\\n  *ngIf=\\\"!(email$ | async)\\\"\\n  (login)=\\\"navigateToLogin()\\\"\\n  (register)=\\\"navigateToRegister()\\\">\\n</app-no-user>\\n\\n<app-theme-picker></app-theme-picker>\\n\"","module.exports = \"* {\\n  color: white; }\\n\\nmat-icon {\\n  margin-right: 5px; }\\n\"","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as AuthActions from '../../../state/auth/actions/';\nimport * as fromAuth from '../../../state/auth/reducers/';\nimport { Router } from '@angular/router';\nimport { AppState } from '../../../state/app/app.interface';\nimport { Store, select } from '@ngrx/store';\nimport { InfoService } from 'src/app/shared/services/info.service';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n\n  email$: Observable<string>;\n\n  constructor(\n    private store: Store<AppState>,\n    private router: Router,\n    private infoService: InfoService) {\n    this.email$ = this.store.pipe(select(fromAuth.getEmail));\n  }\n\n  public logout() {\n    this.store.dispatch(new AuthActions.Logout());\n    this.infoService.showInfo('You were successfully logged out.');\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['login']);\n  }\n  navigateToRegister() {\n    this.router.navigate(['register']);\n  }\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\n  <button mat-button (click)=\\\"navigateToHome()\\\" class=\\\"toolbar__main\\\">\\n    <img src='../../../../assets/icons/icon_white.svg' />\\n    <span>Hackathon</span>\\n  </button>\\n\\n  <span class=\\\"spacer\\\"></span>\\n\\n  <app-menu class=\\\"menu\\\"></app-menu>\\n\\n</mat-toolbar>\"","module.exports = \"* {\\n  color: white; }\\n\\n.spacer {\\n  flex: 1 1 auto; }\\n\\nimg {\\n  height: 2em;\\n  margin-right: 10px; }\\n\\n.toolbar__main {\\n  background-color: rgba(0, 0, 0, 0.3);\\n  border-radius: 0;\\n  height: 100%;\\n  margin-left: -20px;\\n  padding-right: 30px;\\n  padding-left: 25px; }\\n\\n.menu {\\n  height: 100%;\\n  margin-right: -15px; }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n\n  constructor(private router: Router) {\n  }\n\n  navigateToHome() {\n    this.router.navigate(['home']);\n  }\n}\n","import { UserSettingsComponent, NoUserComponent } from './components';\nimport { ToolbarComponent, MenuComponent } from './containers';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { NgModule } from '@angular/core';\nimport { ThemesModule } from '../themes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ThemesModule\n  ],\n  declarations: [\n    ToolbarComponent,\n    UserSettingsComponent,\n    NoUserComponent,\n    MenuComponent,\n  ],\n  exports: [\n    ToolbarComponent,\n  ]\n})\nexport class ToolbarModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://localhost:8080'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}